React can be used to control parts of HTML pages or entire pages. "Widget" approach on a multi-page-application. (Some) pages are still redered on and served by a backend server.
React can also be used to control the entire frontend of a web application. "Single-Page-Application" (SPA) approach. Server only sends one HTML page, thereafter, React takes over and controls the UI

Lean and focused component-based UI library. Certain features (e.g. routing) are added via community packages

Theory/Small Demos& Examples + More Realistic (Bigger) Example Projects + Challenges & Exercises
Basics & Foundation(Introducing Key Features):Components & Building UIs, Working with Events & Data: "props" & "state", Styling React Apps & Components, Introduction into "React Hooks"
Advanced Concepts (Building for Production): Side Effects, "Refs" & More React Hooks, React's Context API & Redux, Forms, Http Requests & "Custom Hooks", Routing; Deployment; NextJS & More,
Summaries & Refreshers(Optimizing your Time): JavaScript Refresher, ReactJS Summary

